#!/usr/bin/env bash

echo 'buildpack=openresty at=start'

# Initialize our readers

psmgr=/tmp/nginx-buildpack-wait
rm -f $psmgr
mkfifo $psmgr

# Generate our configuration file.
if [ ! -f nginx.conf.erb ]; then
	echo 'buildpack=openresty at=fail reason=missing-config message="You must place an nginx.conf.erb in the root directory"'
	exit 1
fi
erb nginx.conf.erb > nginx.conf

#Initialize log directory.

mkdir -p logs/nginx
touch logs/nginx/access.log logs/nginx/error.log
echo 'buildpack=openresty at=logs-initialized'

#Start log redirection.
(
	#Redirect OpenResty logs to stdout.
	tail -qF -n 0 logs/nginx/*.log
	echo 'logs' >$psmgr
) &

#Start App Server
(
	#Take the command passed to this bin and start it.
	#E.g. bin/start-openresty bundle exec unicorn -c config/unicorn.rb
	if [ -n "$APP_COMMAND" ]; then
		echo "buildpack=openresty at=start-app cmd=$APP_COMMAND"
		$APP_COMMAND
		echo 'app' >$psmgr
	fi
) &

#Start OpenResty
(
	#We expect nginx to run in foreground.
	#We also expect a socket to be at /tmp/nginx.socket.

	echo 'buildpack=openresty at=openresty-start'
	nginx -p . -c nginx.conf
	echo 'nginx' >$psmgr
) &

read exit_process <$psmgr
echo "buildpack=openresty at=exit process=$exit_process"
exit 1
